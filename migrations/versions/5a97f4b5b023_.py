"""empty message

Revision ID: 5a97f4b5b023
Revises: 286d0ee4d117
Create Date: 2024-02-13 22:36:30.940211

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5a97f4b5b023'
down_revision = '286d0ee4d117'
branch_labels = None
depends_on = None


def upgrade(engine_name):
    globals()["upgrade_%s" % engine_name]()


def downgrade(engine_name):
    globals()["downgrade_%s" % engine_name]()





def upgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('anchor_debtor',
    sa.Column('debtor_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('debtor_info_locator', sa.String(), nullable=True),
    sa.Column('latest_confirmation_attempt_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('latest_debtor_info_fetch_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.CheckConstraint('debtor_info_locator IS NULL OR latest_debtor_info_fetch_at IS NOT NULL'),
    sa.PrimaryKeyConstraint('debtor_id')
    )
    with op.batch_alter_table('anchor_debtor', schema=None) as batch_op:
        batch_op.create_index('idx_anchor_debtor_fetch_at', ['latest_debtor_info_fetch_at'], unique=False, postgresql_where=sa.text('debtor_info_locator IS NOT NULL'))

    op.create_table('configure_account_signal',
    sa.Column('creditor_id', sa.BigInteger(), nullable=False),
    sa.Column('debtor_id', sa.BigInteger(), nullable=False),
    sa.Column('ts', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('seqnum', sa.Integer(), nullable=False),
    sa.Column('negligible_amount', sa.REAL(), nullable=False),
    sa.Column('config_data', sa.String(), nullable=False),
    sa.Column('config_flags', sa.Integer(), nullable=False),
    sa.Column('inserted_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('creditor_id', 'debtor_id', 'ts', 'seqnum')
    )
    op.create_table('confirm_debtor_signal',
    sa.Column('signal_id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('debtor_id', sa.BigInteger(), nullable=False),
    sa.Column('debtor_info_locator', sa.String(), nullable=False),
    sa.Column('inserted_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('signal_id')
    )
    op.create_table('debtor_info_document',
    sa.Column('debtor_info_locator', sa.String(), nullable=False),
    sa.Column('debtor_id', sa.BigInteger(), nullable=False),
    sa.Column('peg_debtor_info_locator', sa.String(), nullable=True),
    sa.Column('peg_debtor_id', sa.BigInteger(), nullable=True),
    sa.Column('peg_exchange_rate', sa.FLOAT(), nullable=True),
    sa.Column('will_not_change_until', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('fetched_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.CheckConstraint('peg_debtor_info_locator IS NULL OR peg_debtor_id IS NOT NULL AND peg_exchange_rate IS NOT NULL AND peg_exchange_rate >= 0.0'),
    sa.PrimaryKeyConstraint('debtor_info_locator')
    )
    op.create_table('debtor_info_fetch',
    sa.Column('iri', sa.String(), nullable=False),
    sa.Column('debtor_id', sa.BigInteger(), nullable=False),
    sa.Column('is_locator', sa.BOOLEAN(), nullable=False),
    sa.Column('is_confirmation', sa.BOOLEAN(), nullable=False),
    sa.Column('distance_to_anchor', sa.SmallInteger(), nullable=False),
    sa.Column('inserted_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('attempts_count', sa.SmallInteger(), nullable=False),
    sa.Column('latest_attempt_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('latest_attempt_errorcode', sa.SmallInteger(), nullable=True),
    sa.Column('next_attempt_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.CheckConstraint('attempts_count = 0 OR latest_attempt_at IS NOT NULL'),
    sa.CheckConstraint('attempts_count >= 0'),
    sa.CheckConstraint('distance_to_anchor >= 0'),
    sa.PrimaryKeyConstraint('iri', 'debtor_id')
    )
    with op.batch_alter_table('debtor_info_fetch', schema=None) as batch_op:
        batch_op.create_index('idx_debtor_info_fetch_next_attempt_at', ['next_attempt_at'], unique=False)

    op.create_table('discover_debtor_signal',
    sa.Column('signal_id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('debtor_id', sa.BigInteger(), nullable=False),
    sa.Column('iri', sa.String(), nullable=False),
    sa.Column('inserted_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('signal_id')
    )
    op.create_table('fetch_debtor_info_signal',
    sa.Column('signal_id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('iri', sa.String(), nullable=False),
    sa.Column('debtor_id', sa.BigInteger(), nullable=False),
    sa.Column('is_confirmation', sa.BOOLEAN(), nullable=False),
    sa.Column('distance_to_anchor', sa.SmallInteger(), nullable=False),
    sa.Column('inserted_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('signal_id')
    )
    op.create_table('finalize_transfer_signal',
    sa.Column('creditor_id', sa.BigInteger(), nullable=False),
    sa.Column('signal_id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('debtor_id', sa.BigInteger(), nullable=False),
    sa.Column('transfer_id', sa.BigInteger(), nullable=False),
    sa.Column('coordinator_id', sa.BigInteger(), nullable=False),
    sa.Column('coordinator_request_id', sa.BigInteger(), nullable=False),
    sa.Column('committed_amount', sa.BigInteger(), nullable=False),
    sa.Column('transfer_note_format', sa.String(), nullable=False),
    sa.Column('transfer_note', sa.String(), nullable=False),
    sa.Column('inserted_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('creditor_id', 'signal_id')
    )
    op.create_table('prepare_transfer_signal',
    sa.Column('creditor_id', sa.BigInteger(), nullable=False),
    sa.Column('coordinator_request_id', sa.BigInteger(), nullable=False),
    sa.Column('debtor_id', sa.BigInteger(), nullable=False),
    sa.Column('recipient', sa.String(), nullable=False),
    sa.Column('locked_amount', sa.BigInteger(), nullable=False),
    sa.Column('min_interest_rate', sa.Float(), nullable=False),
    sa.Column('max_commit_delay', sa.Integer(), nullable=False),
    sa.Column('inserted_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('creditor_id', 'coordinator_request_id')
    )
    # ### end Alembic commands ###


def downgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('prepare_transfer_signal')
    op.drop_table('finalize_transfer_signal')
    op.drop_table('fetch_debtor_info_signal')
    op.drop_table('discover_debtor_signal')
    with op.batch_alter_table('debtor_info_fetch', schema=None) as batch_op:
        batch_op.drop_index('idx_debtor_info_fetch_next_attempt_at')

    op.drop_table('debtor_info_fetch')
    op.drop_table('debtor_info_document')
    op.drop_table('confirm_debtor_signal')
    op.drop_table('configure_account_signal')
    with op.batch_alter_table('anchor_debtor', schema=None) as batch_op:
        batch_op.drop_index('idx_anchor_debtor_fetch_at', postgresql_where=sa.text('debtor_info_locator IS NOT NULL'))

    op.drop_table('anchor_debtor')
    # ### end Alembic commands ###


def upgrade_solver():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def downgrade_solver():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###

